1642712303
AwuilbDvXz%3A7f53f11ff9df9cc083c7b2e1fb7f4762-a25622d2296437ed029498800629d2df
s:15260:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxMjp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6ImEyNTYyMmQyMjk2NDM3ZWQwMjk0OTg4MDA2MjlkMmRmIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6MTA6InBsYXllci5waHAiO3M6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAcGF0aCI7czoxMDoicGxheWVyLnBocCI7czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBzb3VyY2UiO3M6MTA0NzA6Ijw/cGhwCk5hbWVzcGFjZSBNdXNpY1RvZ2V0aGVyOwppbmlfc2V0KCdkaXNwbGF5X2Vycm9ycycsICcxJyk7CmluaV9zZXQoJ2Rpc3BsYXlfc3RhcnR1cF9lcnJvcnMnLCAnMScpOwplcnJvcl9yZXBvcnRpbmcoRV9BTEwpOwoKcmVxdWlyZV9vbmNlICJjb25zdGFudHMucGhwIjsKcmVxdWlyZV9vbmNlICJmdW5jdGlvbnMucGhwIjsKcmVxdWlyZV9vbmNlICJ1c2VyLnBocCI7CgpzZXNzaW9uX3N0YXJ0KCk7CgppZiAoIWlzc2V0KCRfR0VUWyJncm91cF9pZCJdKSkgewogICAgaGVhZGVyKCJMb2NhdGlvbjogIiAuICRob21lcGFnZSAuICIvZGFzaGJvYXJkLnBocCIpOwogICAgZXhpdCgpOwp9Cgo/Pgo8IURPQ1RZUEUgaHRtbD4KPGh0bWwgbGFuZz0iZW4iPgo8aGVhZD4KICAgIDw/cGhwCiAgICAgICAgLy8gU3RvcmUgdGhlIHVzZXIncyBkYXRhIGluIEphdmFTY3JpcHQKICAgICAgICBlY2hvICc8c2NyaXB0PgogICAgICAgIHZhciBncm91cF9pZCA9ICInOwogICAgICAgIGVjaG8gJF9HRVRbImdyb3VwX2lkIl07CiAgICAgICAgZWNobyAnIjwvc2NyaXB0Pic7CiAgICAgICAgZWNobyAnPHNjcmlwdD4KICAgICAgICB2YXIgdXNlcl9uYW1lID0gIic7CiAgICAgICAgZWNobyAkX1NFU1NJT05bImN1cnJlbnRfdXNlciJdLT5uYW1lOwogICAgICAgIGVjaG8gJyI8L3NjcmlwdD4nOwogICAgICAgIGVjaG8gJzxzY3JpcHQ+CiAgICAgICAgdmFyIHVzZXJfcHJvZl9waWMgPSAiJzsKICAgICAgICBlY2hvICRfU0VTU0lPTlsiY3VycmVudF91c2VyIl0tPnByb2ZfcGljOwogICAgICAgIGVjaG8gJyI8L3NjcmlwdD4nOwogICAgICAgIGVjaG8gJzxzY3JpcHQ+CiAgICAgICAgdmFyIHVzZXJfaWQgPSAiJzsKICAgICAgICBlY2hvICRfU0VTU0lPTlsiY3VycmVudF91c2VyIl0tPmlkOwogICAgICAgIGVjaG8gJyI8L3NjcmlwdD4nOwogICAgICAgIGVjaG8gJzxzY3JpcHQ+CiAgICAgICAgdmFyIGFjY2Vzc1Rva2VuID0gIic7CiAgICAgICAgZWNobyAkX1NFU1NJT05bImN1cnJlbnRfdXNlciJdLT5hY2Nlc3NfdG9rZW47CiAgICAgICAgZWNobyAnIjwvc2NyaXB0Pic7CiAgICAgICAgZWNobyAnPHNjcmlwdD4KICAgICAgICB2YXIgcmVmcmVzaFRva2VuID0gIic7CiAgICAgICAgZWNobyAkX1NFU1NJT05bInJlZnJlc2hfdG9rZW4iXTsKICAgICAgICBlY2hvICciPC9zY3JpcHQ+JzsKCiAgICA/PgogICAgPG1ldGEgY2hhcnNldD0iVVRGLTgiPgogICAgPG1ldGEgbmFtZT0idmlld3BvcnQiIGNvbnRlbnQ9IndpZHRoPWRldmljZS13aWR0aCwgaW5pdGlhbC1zY2FsZT0xLjAiPgogICAgPHRpdGxlPk11c2ljIFRvZ2V0aGVyITwvdGl0bGU+CiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9InN0eWxlL2Rpc3QvcGxheWVyLm1pbi5jc3MiPgogICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vYWpheC5nb29nbGVhcGlzLmNvbS9hamF4L2xpYnMvanF1ZXJ5LzMuNS4xL2pxdWVyeS5taW4uanMiPjwvc2NyaXB0PgogICAgPHNjcmlwdCBzcmM9ImpzL2Rpc3Qvc29ja2V0LmlvLnByb2QuanMiPjwvc2NyaXB0Pgo8L2hlYWQ+Cjxib2R5PgogICAgPCEtLSBTUE9USUZZIFdFQiBQTEFZRVIgLS0+CiAgICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly9zZGsuc2Nkbi5jby9zcG90aWZ5LXBsYXllci5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHNyYz0ianMvc3BvdGlmeS1wbGF5ZXIuanMiPjwvc2NyaXB0PgoKICAgIDwhLS0gPGRpdiBjbGFzcz0icG9wdXAtY29udGFpbmVyIj4KICAgICAgICA8aW1nIHNyYz0iaW1nL2NoZWNrLW1hcmsucG5nIj4KICAgICAgICA8ZGl2PlNvbWUgc29ydCBvZiBtZXNzYWdlPC9kaXY+CiAgICA8L2Rpdj4gLS0+CgogICAgPCEtLSBTRUFSQ0ggT1ZFUkxBWSAtLT4KICAgIDxkaXYgY2xhc3M9InNjcmVlbi1ibG9jayI+PC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJzZWFyY2gtb3ZlcmxheSI+CiAgICAgICAgPGRpdiBjbGFzcz0ic2VhcmNoLWlucHV0LWNvbnRhaW5lciI+CiAgICAgICAgICAgIDxpbnB1dCBpZD0ic2VhcmNoLWlucHV0LWlucHV0IiB0eXBlPSJ0ZXh0IiBwbGFjZWhvbGRlcj0iU2VhcmNoIj4KICAgICAgICAgICAgPGltZyBzcmM9ImltZy9zZWFyY2guc3ZnIj4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJzZWFyY2gtcmVzdWx0cy1jb250YWluZXIiPgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VhcmNoLXRpdGxlIiBpZD0ic2VhcmNoLXNvbmdzLXRpdGxlIj4KICAgICAgICAgICAgICAgIFNvbmdzCiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWFyY2gtdHlwZS1jb250YWluZXIiIGlkPSJzZWFyY2gtc29uZ3MtY29udGFpbmVyIj48L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlYXJjaC10aXRsZSIgaWQ9InNlYXJjaC1hcnRpc3RzLXRpdGxlIj4KICAgICAgICAgICAgICAgIEFydGlzdHMKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlYXJjaC10eXBlLWNvbnRhaW5lciIgaWQ9InNlYXJjaC1hcnRpc3RzLWNvbnRhaW5lciI+PC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWFyY2gtdGl0bGUiIGlkPSJzZWFyY2gtYWxidW1zLXRpdGxlIj4KICAgICAgICAgICAgICAgIEFsYnVtcwogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VhcmNoLXR5cGUtY29udGFpbmVyIiBpZD0ic2VhcmNoLWFsYnVtcy1jb250YWluZXIiPjwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VhcmNoLXRpdGxlIiBpZD0ic2VhcmNoLXBsYXlsaXN0cy10aXRsZSI+CiAgICAgICAgICAgICAgICBQbGF5bGlzdHMKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlYXJjaC10eXBlLWNvbnRhaW5lciIgaWQ9InNlYXJjaC1wbGF5bGlzdHMtY29udGFpbmVyIj48L2Rpdj4KCiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KCiAgICA8YXVkaW8gc3R5bGU9ImRpc3BsYXk6IG5vbmUiIGlkPSJkdW1teUF1ZGlvIiBzcmM9Imh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9hbmFycy9ibGFuay1hdWRpby9tYXN0ZXIvMTUtc2Vjb25kcy1vZi1zaWxlbmNlLm1wMyI+CiAgICA8L2F1ZGlvPgoKICAgIDwhLS0gTUFJTiBQTEFZRVIgQ09OVEVOVCAtLT4KICAgIDxkaXYgY2xhc3M9ImdyaWQtY29udGFpbmVyIj4KCiAgICAgICAgPGRpdiBjbGFzcz0iZ3JpZC1ncm91cCI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdyaWQtdGl0bGUiPgogICAgICAgICAgICAgICAgTXkgZ3JvdXAKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9Imdyb3VwLWlkIj4KICAgICAgICAgICAgICAgIEdyb3VwIElEOiA8P3BocCBlY2hvICRfR0VUWyJncm91cF9pZCJdID8+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJ5ZWxsb3ctYnRuIGdyb3VwLWludml0ZS1idG4iPgogICAgICAgICAgICAgICAgSW52aXRlIHVzZXJzCiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0iZ3JvdXAtdXNlcnMtY29udGFpbmVyIj4KPCEtLSAKICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Imdyb3VwLXVzZXItY29udGFpbmVyIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJncm91cC11c2VyLWltYWdlIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9IlBST0ZfUElDIj4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJncm91cC11c2VyLXRleHQtY29udGFpbmVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZ3JvdXAtdXNlci10ZXh0LW5hbWUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgTkFNRSBIRVJFCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJncm91cC11c2VyLXRleHQtdHlwaW5nIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGluZy4uLgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgotLT4KCiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICA8L2Rpdj4KCiAgICAgICAgPGRpdiBjbGFzcz0iZ3JpZC1tZXNzYWdlcyI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdyaWQtdGl0bGUiPgogICAgICAgICAgICAgICAgTWVzc2FnZXMKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1lc3NhZ2VzLWNvbnRhaW5lciI+CgogICAgICAgICAgICAgICAgPCEtLSA8ZGl2IGNsYXNzPSJtZXNzYWdlIG90aGVyIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtZXNzYWdlLW5hbWUiPgogICAgICAgICAgICAgICAgICAgICAgICBDYXJvbCBBbm5lCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWVzc2FnZS10ZXh0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgSGkgdGhlcmUgYmxhaCBibGFoIGJsYWguCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWVzc2FnZS10aW1lIj4KICAgICAgICAgICAgICAgICAgICAgICAgMTU6MDkKICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1lc3NhZ2UgbWUiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1lc3NhZ2UtbmFtZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIENhcm9sIEFubmUKICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtZXNzYWdlLXRleHQiPgogICAgICAgICAgICAgICAgICAgICAgICBIaSB0aGVyZSBibGFoIGJsYWggYmxhaC4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtZXNzYWdlLXRpbWUiPgogICAgICAgICAgICAgICAgICAgICAgICAxNTowOQogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+IC0tPgoKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1lc3NhZ2VzLWlucHV0LWNvbnRhaW5lciI+CiAgICAgICAgICAgICAgICA8aW5wdXQgaWQ9Im1lc3NhZ2VzLWlucHV0IiB0eXBlPSJ0ZXh0IiBzcGVsbGNoZWNrPSJ0cnVlIiBwbGFjZWhvbGRlcj0iTWVzc2FnZSI+CiAgICAgICAgICAgICAgICA8YSBjbGFzcz0ibWVzc2FnZXMtaW5wdXQtYnRuIHllbGxvdy1idG4iIGhyZWY9IiMiPgogICAgICAgICAgICAgICAgICAgIFNlbmQKICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CgogICAgICAgIDxkaXYgY2xhc3M9ImdyaWQtcmVjZW50Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZ3JpZC10aXRsZSI+CiAgICAgICAgICAgICAgICBSZWNlbnRseSBwbGF5ZWQKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InJlY2VudC10cmFja3MtY29udGFpbmVyIj4KCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWNlbnQtdHJhY2stY29udGFpbmVyIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWNlbnQtdHJhY2staW1hZ2UtY29udGFpbmVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0icmVjZW50LXRyYWNrLWltYWdlIiBzcmM9ImRlZmF1bHRQcm9maWxlUGljdHVyZS5wbmciPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWNlbnQtdHJhY2staW1hZ2UtbGlrZXMtY29udGFpbmVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9InJlY2VudC10cmFjay1pbWFnZS1saWtlcy1pY29uIiBzcmM9ImltZy9saWtlLnBuZyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWNlbnQtdHJhY2staW1hZ2UtbGlrZXMtbnVtYmVyIj43PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJlY2VudC10cmFjay10ZXh0LWNvbnRhaW5lciI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJlY2VudC10cmFjay1uYW1lIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIFRoZSBTb3VuZAogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icmVjZW50LXRyYWNrLWFydGlzdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBUaGUgMTk3NQogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJlY2VudC10cmFjay1jb250YWluZXIiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJlY2VudC10cmFjay1pbWFnZS1jb250YWluZXIiPgogICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJyZWNlbnQtdHJhY2staW1hZ2UiIHNyYz0iZGVmYXVsdFByb2ZpbGVQaWN0dXJlLnBuZyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJlY2VudC10cmFjay1pbWFnZS1saWtlcy1jb250YWluZXIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0icmVjZW50LXRyYWNrLWltYWdlLWxpa2VzLWljb24iIHNyYz0iaW1nL2xpa2UucG5nIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJlY2VudC10cmFjay1pbWFnZS1saWtlcy1udW1iZXIiPjc8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icmVjZW50LXRyYWNrLXRleHQtY29udGFpbmVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icmVjZW50LXRyYWNrLW5hbWUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgVGhlIFNvdW5kCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWNlbnQtdHJhY2stYXJ0aXN0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIFRoZSAxOTc1CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icmVjZW50LXRyYWNrLWNvbnRhaW5lciI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icmVjZW50LXRyYWNrLWltYWdlLWNvbnRhaW5lciI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9InJlY2VudC10cmFjay1pbWFnZSIgc3JjPSJkZWZhdWx0UHJvZmlsZVBpY3R1cmUucG5nIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icmVjZW50LXRyYWNrLWltYWdlLWxpa2VzLWNvbnRhaW5lciI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJyZWNlbnQtdHJhY2staW1hZ2UtbGlrZXMtaWNvbiIgc3JjPSJpbWcvbGlrZS5wbmciPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icmVjZW50LXRyYWNrLWltYWdlLWxpa2VzLW51bWJlciI+NzwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWNlbnQtdHJhY2stdGV4dC1jb250YWluZXIiPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWNlbnQtdHJhY2stbmFtZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBUaGUgU291bmQKICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJlY2VudC10cmFjay1hcnRpc3QiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgVGhlIDE5NzUKICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICA8L2Rpdj4KCiAgICAgICAgPGRpdiBjbGFzcz0iZ3JpZC1wbGF5ZXIiPgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2V0dGluZ3MtY29udGFpbmVyIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InNldHRpbmdzLWlubmVyLWNvbnRhaW5lciI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2V0dGluZ3MtdGV4dC1jb250YWluZXIiPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZXR0aW5ncy1uYW1lIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDw/cGhwIGVjaG8gJF9TRVNTSU9OWyJjdXJyZW50X3VzZXIiXS0+bmFtZTsgPz4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJzZXR0aW5ncy1idG4geWVsbG93LWJ0biIgaHJlZj0iIyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBTZXR0aW5ncwogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2V0dGluZ3MtaW1hZ2UiPgogICAgICAgICAgICAgICAgICAgIDxpbWcgaWQ9InByb2YtcGljIiBzcmM9Ijw/cGhwIGVjaG8gJF9TRVNTSU9OWyJjdXJyZW50X3VzZXIiXS0+cHJvZl9waWM7ID8+IiAvPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icGxheWVyLWNvbnRhaW5lciI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwbGF5ZXItc2VhcmNoLWNvbnRhaW5lciI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VhcmNoLWlucHV0LWNvbnRhaW5lciI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBwbGFjZWhvbGRlcj0iU2VhcmNoIiBpZD0iZHVtbXktc2VhcmNoIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9ImltZy9zZWFyY2guc3ZnIj4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icGxheWVyLWltYWdlLWNvbnRhaW5lciI+CiAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9ImRlZmF1bHRQcm9maWxlUGljdHVyZS5wbmciIGNsYXNzPSJwbGF5ZXItaW1hZ2UiIGlkPSJwbGF5ZXItaW1hZ2UiPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwbGF5ZXItdGV4dC1jb250YWluZXIiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InBsYXllci10ZXh0LW5hbWUiIGlkPSJwbGF5ZXItbmFtZSI+TWFydGluICYgR2luYTwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InBsYXllci10ZXh0LWFydGlzdCIgaWQ9InBsYXllci1hcnRpc3QiPlBvbG8gRzwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwbGF5ZXItY29udHJvbHMtY29udGFpbmVyIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwbGF5ZXItY29udHJvbCIgaWQ9InBsYXllci1jb250cm9sLWJhY2siPjwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InBsYXllci1jb250cm9sIiBpZD0icGxheWVyLWNvbnRyb2wtcGF1c2UiPjwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InBsYXllci1jb250cm9sIiBpZD0icGxheWVyLWNvbnRyb2wtZm9yd2FyZCI+PC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InBsYXllci1zaGFyZS1jb250YWluZXIiPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwbGF5ZXItc2hhcmUtcGxheWxpc3QiPjwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwbGF5ZXItc2hhcmUtbGlrZSI+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InBsYXllci1zaGFyZS1zaGFyZSI+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICA8L2Rpdj4KICAgIDwvZGl2Pgo8L2JvZHk+CjxzY3JpcHQgc3JjPSJqcy9wbGF5ZXIuanMiPjwvc2NyaXB0Pgo8c2NyaXB0IHNyYz0ianMvcGxheWVyLXVpLmpzIj48L3NjcmlwdD4KPC9odG1sPiI7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lc3BhY2VzIjthOjE6e3M6MTQ6IlxNdXNpY1RvZ2V0aGVyIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6MTQ6IlxNdXNpY1RvZ2V0aGVyIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MTM6Ik11c2ljVG9nZXRoZXIiO319czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbmNsdWRlcyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBmdW5jdGlvbnMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY29uc3RhbnRzIjthOjA6e31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNsYXNzZXMiO2E6MDp7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW50ZXJmYWNlcyI7YTowOnt9czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQB0cmFpdHMiO2E6MDp7fX0=";